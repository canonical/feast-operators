# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = fmt, lint, unit, integration
min_version = 4.0.0

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
allowlist_externals = poetry
deps =
    poetry
set_env =
    PYTHONPATH = {tox_root}:{tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:update-requirements]
description = Apply coding style standards to code
commands =
    poetry lock
    poetry install --with update-requirements --no-root
    poetry self add poetry-plugin-export
    poetry export -f requirements.txt -o requirements.txt --without-hashes

[testenv:fmt]
description = Apply coding style standards to code
commands =
    poetry install --with fmt --no-root
    poetry run ruff check --fix {[vars]all_path}
    poetry run ruff format {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands =
    poetry install --with lint --no-root
    # if this charm owns a lib, uncomment "lib_path" variable
    # and uncomment the following line
    # codespell {[vars]lib_path}
    poetry run codespell {tox_root} \
        --skip {tox_root}/poetry.lock \
        --skip {tox_root}/venv \
        --skip {tox_root}/.tox \
        --skip {tox_root}/.git
    poetry run ruff check {[vars]all_path}
    poetry run ruff format --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
commands =
    poetry install --with unit --no-root
    poetry run coverage run --source={[vars]src_path} \
                 -m pytest \
                 --tb native \
                 -v \
                 -s \
                 {posargs} \
                 {[vars]tests_path}/unit
    poetry run coverage report
    poetry run coverage xml

[testenv:tflint]
allowlist_externals =
    tflint
commands =
    tflint --chdir=terraform --recursive
description = Check Terraform code against coding style standards

[testenv:integration]
description = Run integration tests
commands =
    poetry install --with integration --no-root
    poetry run pytest -v \
           -x \
           -s \
           --tb native \
           --log-cli-level=INFO \
           {posargs} \
           {[vars]tests_path}/integration

